#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define ALPHABET_SIZE 26
#define TOP_N 10

void letterFrequency(char *text, int *frequencies) {
    int len = strlen(text);
    for (int i = 0; i < len; i++) {
        if (isalpha(text[i])) {
            frequencies[tolower(text[i]) - 'a']++;
        }
    }
}

void printTopN(int *frequencies, int n) {
    int sortedIndexes[ALPHABET_SIZE];
    for (int i = 0; i < ALPHABET_SIZE; i++) {
        sortedIndexes[i] = i;
    }

    // Sort the indexes based on frequency
    for (int i = 0; i < ALPHABET_SIZE - 1; i++) {
        for (int j = i + 1; j < ALPHABET_SIZE; j++) {
            if (frequencies[sortedIndexes[j]] > frequencies[sortedIndexes[i]]) {
                int temp = sortedIndexes[i];
                sortedIndexes[i] = sortedIndexes[j];
                sortedIndexes[j] = temp;
            }
        }
    }

    // Print the top N
    for (int i = 0; i < n && i < ALPHABET_SIZE; i++) {
        printf("Possible plaintext: ");
        for (int j = 0; j < ALPHABET_SIZE; j++) {
            printf("%c", ((j + sortedIndexes[i]) % ALPHABET_SIZE) + 'a');
        }
        printf("\n");
    }
}

int main() {
    char text[] = "ciphertextexample";
    int frequencies[ALPHABET_SIZE] = {0};
    int topN = TOP_N;

    letterFrequency(text, frequencies);
    printTopN(frequencies, topN);

    return 0;
}
