#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define SIZE 5

void toUpperCase(char str[]) {
    for (int i = 0; str[i] != '\0'; i++) {
        if (str[i] >= 'a' && str[i] <= 'z') {
            str[i] -= 32;
        }
    }
}

void prepareText(char *text) {
    int len = strlen(text);
    for (int i = 0; i < len; i++) {
        if (text[i] == ' ') {
            memmove(&text[i], &text[i + 1], len - i);
            len--;
        }
    }
    for (int i = 0; i < len - 1; i++) {
        if (text[i] == text[i + 1]) {
            memmove(&text[i + 1], &text[i + 2], len - i - 1);
            len--;
        }
    }
    if (len % 2 != 0) {
        text[len++] = 'X';
        text[len] = '\0';
    }
}

void generateKeyTable(char keyTable[SIZE][SIZE]) {
    char key[] = "MFHIKNOPQZVWXYELARGDSTBC";
    int used[26] = {0};

    int index = 0;
    for (int i = 0; i < strlen(key); i++) {
        char ch = key[i];
        if (ch != 'J' && !used[ch - 'A']) {
            keyTable[index / SIZE][index % SIZE] = ch;
            used[ch - 'A'] = 1;
            index++;
        }
    }
}

void printTable(char keyTable[SIZE][SIZE]) {
    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            printf("%c ", keyTable[i][j]);
        }
        printf("\n");
    }
}

void search(char keyTable[SIZE][SIZE], char a, char b, int arr[]) {
    if (a == 'J') a = 'I';
    if (b == 'J') b = 'I';

    for (int i = 0; i < SIZE; i++) {
        for (int j = 0; j < SIZE; j++) {
            if (keyTable[i][j] == a) {
                arr[0] = i;
                arr[1] = j;
            }
            if (keyTable[i][j] == b) {
                arr[2] = i;
                arr[3] = j;
            }
        }
    }
}

void encrypt(char *text, char keyTable[SIZE][SIZE]) {
    prepareText(text);
    int len = strlen(text);

    for (int i = 0; i < len; i += 2) {
        int arr[4];
        search(keyTable, text[i], text[i + 1], arr);

        if (arr[0] == arr[2]) {
            text[i] = keyTable[arr[0]][(arr[1] + 1) % SIZE];
            text[i + 1] = keyTable[arr[2]][(arr[3] + 1) % SIZE];
        } else if (arr[1] == arr[3]) {
            text[i] = keyTable[(arr[0] + 1) % SIZE][arr[1]];
            text[i + 1] = keyTable[(arr[2] + 1) % SIZE][arr[3]];
        } else {
            text[i] = keyTable[arr[0]][arr[3]];
            text[i + 1] = keyTable[arr[2]][arr[1]];
        }
    }
}

int main() {
    char text[] = "Must see you over Cadogan West. Coming at once.";
    char keyTable[SIZE][SIZE];

    toUpperCase(text);

    generateKeyTable(keyTable);
    printf("Key Table:\n");
    printTable(keyTable);

    encrypt(text, keyTable);

    printf("Encrypted text: %s\n", text);

    return 0;
}
